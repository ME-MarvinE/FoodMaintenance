<Application
    x:Class="FoodMaintenance.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:ValidationRules="clr-namespace:FoodMaintenance.ValidationRules"
    xmlns:local="clr-namespace:FoodMaintenance">

    <Application.Resources>

        <Color x:Key="MainBackgroundColor">#201E30</Color>
        <SolidColorBrush x:Key="MainBackgroundColorBrush" Color="{StaticResource MainBackgroundColor}"/>
        <Color x:Key="MainForegroundColor">White</Color>
        <SolidColorBrush x:Key="MainForegroundColorBrush" Color="{StaticResource MainForegroundColor}"/>
        <Color x:Key="TitleBarBackgroundColor">#272537</Color>
        <SolidColorBrush x:Key="TitleBarBackgroundColorBrush" Color="{StaticResource TitleBarBackgroundColor}"/>
        <Color x:Key="MenuBarBackgroundColor">#1B192B</Color>
        <SolidColorBrush x:Key="MenuBarBackgroundColorBrush" Color="{StaticResource MenuBarBackgroundColor}"/>
        <Color x:Key="MenuBarButtonHover">#373547</Color>
        <SolidColorBrush x:Key="MenuBarButtonHoverBrush" Color="{StaticResource MenuBarButtonHover}"/>
        <Color x:Key="MenuBarButtonPressed">#413F51</Color>
        <SolidColorBrush x:Key="MenuBarButtonPressedBrush" Color="{StaticResource MenuBarButtonPressed}"/>

        <Color x:Key="SeparatorColor">#404040</Color>
        <SolidColorBrush x:Key="SeparatorColorBrush" Color="{StaticResource SeparatorColor}"/>
        <Color x:Key="OutlineColor">#707070</Color>
        <SolidColorBrush x:Key="OutlineColorBrush" Color="{StaticResource OutlineColor}"/>

        <Color x:Key="MainButtonColor">#404050</Color>
        <SolidColorBrush x:Key="MainButtonColorBrush" Color="{StaticResource MainButtonColor}"/>
        <Color x:Key="MainButtonForegroundColor">White</Color>
        <SolidColorBrush x:Key="MainButtonForegroundColorBrush" Color="{StaticResource MainButtonForegroundColor}"/>
        <Color x:Key="MainButtonHoverColor">#5A5A6A</Color>
        <SolidColorBrush x:Key="MainButtonHoverColorBrush" Color="{StaticResource MainButtonHoverColor}"/>
        <Color x:Key="MainButtonBadHoverColor">#C02A2A</Color>
        <SolidColorBrush x:Key="MainButtonBadHoverColorBrush" Color="{StaticResource MainButtonBadHoverColor}"/>
        <Color x:Key="MainButtonBadPressedColor">#F04A4A</Color>
        <SolidColorBrush x:Key="MainButtonBadPressedColorBrush" Color="{StaticResource MainButtonBadPressedColor}"/>
        <Color x:Key="MainButtonPressedColor">#1080A0</Color>
        <SolidColorBrush x:Key="MainButtonPressedColorBrush" Color="{StaticResource MainButtonPressedColor}"/>

        <Color x:Key="WindowButtonHoverColor">#373547</Color>
        <SolidColorBrush x:Key="WindowButtonHoverColorBrush" Color="{StaticResource WindowButtonHoverColor}"/>
        <Color x:Key="WindowButtonPressedColor">#009FAF</Color>
        <SolidColorBrush x:Key="WindowButtonPressedColorBrush" Color="{StaticResource WindowButtonPressedColor}"/>

        <Color x:Key="MainInputColor">#303030</Color>
        <SolidColorBrush x:Key="MainInputColorBrush" Color="{StaticResource MainInputColor}"/>
        <Color x:Key="MainInputForegroundColor">White</Color>
        <SolidColorBrush x:Key="MainInputForegroundColorBrush" Color="{StaticResource MainInputForegroundColor}"/>

        <Color x:Key="ValidationErrorColor">Red</Color>
        <SolidColorBrush x:Key="ValidationErrorColorBrush" Color="{StaticResource ValidationErrorColor}"/>
        
        <System:Double x:Key="Heading1FontSize">28</System:Double>
        <System:Double x:Key="Heading2FontSize">20</System:Double>
        <System:Double x:Key="Heading3FontSize">16</System:Double>
        <System:Double x:Key="Text1FontSize">14</System:Double>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource MainButtonColorBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource MainButtonForegroundColorBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            VerticalAlignment="{Binding VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentPresenter HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MainButtonHoverColorBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource MainButtonPressedColorBrush}"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style
            x:Key="BadButton"
            BasedOn="{StaticResource {x:Type Button}}"
            TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MainButtonBadHoverColorBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource MainButtonBadPressedColorBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource MainInputColorBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource MainInputForegroundColorBrush}"/>
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{StaticResource MainInputForegroundColorBrush}"/>
        </Style>

        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource MainForegroundColorBrush}"/>
        </Style>

        <ValidationRules:StringValidationRule
            x:Key="NotNullOrWhiteSpaceValidationRule"
            ValidatesOnTargetUpdated="True"
            AllowEmpty="False"
            AllowWhiteSpace="False"/>
        <ValidationRules:StringValidationRule
            x:Key="NumericValidationRule"
            ValidatesOnTargetUpdated="True"
            RegexPattern="^ *[0-9]+ *$"
            RegexErrorString="Must be a number."/>
        <ValidationRules:ObjectValidationRule
            x:Key="NotNullValidationRule"
            ValidatesOnTargetUpdated="True"
            AllowNull="False"/>
        <ControlTemplate x:Key="ValidationRuleErrorTemplate">
            <Grid>
                <Polygon
                    HorizontalAlignment="Right"
                    Fill="{StaticResource ValidationErrorColorBrush}"
                    Points="9, 9, 9, 0, 0, 0"
                    Stroke="{StaticResource ValidationErrorColorBrush}"
                    StrokeThickness="1"
                    ToolTip="{Binding ErrorContent}"
                    Margin="0,1,1,0"/>

                <Border BorderBrush="{StaticResource ValidationErrorColorBrush}" BorderThickness="1"/>
                
                <AdornedElementPlaceholder/>
            </Grid>
        </ControlTemplate>

    </Application.Resources>

</Application>
